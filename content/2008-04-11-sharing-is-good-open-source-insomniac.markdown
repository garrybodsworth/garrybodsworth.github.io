Title: Sharing Is Good - The Open-Source Insomniac
Date: 2008-04-11T20:28:00+00:00
Slug: sharing-is-good-open-source-insomniac
Category: 
Tags: 
Authors: Garry Bodsworth

<a href="http://www.insomniacgames.com/">Insomniac Games</a> who are behind Ratchet &amp; Clank and Resistance: Fall Of Man have recently decided to start sharing knowledge.  Gaming is a notoriously secretive industry and is not well renowned for its open-ness, and Insomniac think its mad that developers keep reinvenhttp://www.blogger.com/img/gl.link.gifting the same core pieces of functionality that don't even make up the bread'n'butter of gaming.

First up is the <a href="http://www.insomniacgames.com/tech/techpage.php">R&amp;D section on their website</a>.  This section contains presentations and papers about various subjects including graphics, gameplay, memory and performance.

Next up is the open-source BSD-style licensed code.  The section is called the <a href="http://nocturnal.insomniacgames.com/index.php/Main_Page">Nocturnal Initiative</a> and is a wiki.  There are links to community forums which aren't busy yet.

At the moment some of the source code available is:
<ul><li>C++ Delegate/Event System</li><li>Pointer to reference counted objects</li><li>Pointer to heap allocated arrays</li><li>Endian conversion code</li><li>Insertion ordered std::set</li><li>Reversible key and value std::map</li><li>Interprocess Communication</li><ul><li>      Fast non-blocking message-based design</li><li>      Works over BSD-style sockets (TCP) or Named Pipes</li><li>Windows platform included, additional platforms are easily added</li></ul><li>Debugging Helpers</li><ul><li>      PDB-based symbol information querying</li><li>      Capture stacks within your program making heap object tracking and leak debugging easier</li><li>      Give your application automatic crash reports dispatched via email that contain handy user/machine informaton, call stack, and memory page allocation stats</li></ul><li>Console Output Manager</li><ul><li>      Log console output to one or more trace files</li><li>      Color code the console output based on Error/Warning/Debug print statements</li><li>Throttle output verbosity (configured via command line arg or environment variable)</li><li>      Outline nested stages of processing performed by your application (for builders/exporters)</li><li>      Augment crash reports with the current outline state of your application (very useful for tracking down new crash bugs)</li></ul><li>Instrumenting Profiler</li><ul><li>      Cross platform (Windows and PS3 currently)</li><li>      Macro-instrumented stack timer based profiler</li><li>      Concise profile report printed out at program exit</li><li>      Logs instance data out to human readable log file (Profile Analyzer is in development)</li></ul><li>C++ Reflection</li><ul><li>      Instrument your application classes and register them with the type registry</li><li>      Can serialize object instances to XML or our (faster) custom binary format</li><li>      Flexible parsing mechanics allow you to read in old versions of your class</li><li>      Handles renaming member variables as well as changing member type (within reasonable limits)</li><li>      Supports serializing std::vector, std::set, and std::map containers with primitives or pointers to other reflect objects</li><li>  Supports serializing enum and bitfield members using string representation (supports reordering enum elements)</li><li>      Provides for automatic object comparison and cloning</li><li>      Implements introspection using a visitor interface</li></ul></ul>
Some of it looks pretty good.  I hope this means that there is more sharing of C++ code which is always a good thing, maybe even some of the libraries could be Boost-ified...
