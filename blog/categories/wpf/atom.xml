<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: WPF | Fragmented Memory]]></title>
  <link href="http://www.fragmentedmemory.com/blog/categories/wpf/atom.xml" rel="self"/>
  <link href="http://www.fragmentedmemory.com/"/>
  <updated>2013-06-18T20:44:35+01:00</updated>
  <id>http://www.fragmentedmemory.com/</id>
  <author>
    <name><![CDATA[Garry Bodsworth]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Windows Presentation Foundation - 2D and 3D]]></title>
    <link href="http://www.fragmentedmemory.com/blog/2006/12/19/windows-presentation-foundation-2d-and/"/>
    <updated>2006-12-19T09:24:00+00:00</updated>
    <id>http://www.fragmentedmemory.com/blog/2006/12/19/windows-presentation-foundation-2d-and</id>
    <content type="html"><![CDATA[<div class='post'>
The WPF team has just blogged about a new feature in WPF which is 2D controls on a 3D surface.  Unfortunately the mapping happens within a standard window frame.  When someone works out how to do without the encapsulating window it could look really very good.<br /><br />Although I am worried what kind of insane and unusable user interfaces this will spawn...<br /><br />You can read the post <a href="http://blogs.msdn.com/wpf3d/archive/2006/12/12/interacting-with-2d-on-3d-in-wpf.aspx">here</a>.</div>

]]></content>
  </entry>
  
</feed>
