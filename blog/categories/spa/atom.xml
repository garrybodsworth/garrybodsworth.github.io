<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: SPA | Fragmented Memory]]></title>
  <link href="http://www.fragmentedmemory.com/blog/categories/spa/atom.xml" rel="self"/>
  <link href="http://www.fragmentedmemory.com/"/>
  <updated>2013-06-18T20:44:35+01:00</updated>
  <id>http://www.fragmentedmemory.com/</id>
  <author>
    <name><![CDATA[Garry Bodsworth]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[SPA Talks - Continuous Integration and Type Driven Testing]]></title>
    <link href="http://www.fragmentedmemory.com/blog/2008/03/13/spa-talks-continuous-integration-and/"/>
    <updated>2008-03-13T20:52:00+00:00</updated>
    <id>http://www.fragmentedmemory.com/blog/2008/03/13/spa-talks-continuous-integration-and</id>
    <content type="html"><![CDATA[<div class='post'>
In the space of two weeks there have been two <a href="http://www.bcs-spa.org/cgi-bin/view/SPA/SpaCambridge">BCS SPA Cambridge</a> talks organised by <a href="http://blog.software-acumen.com/">Mark Dalgarno</a>.<br /><br /><a href="http://www.bcs-spa.org/cgi-bin/view/SPA/ContinuousIntegration">Continuous Integration</a> by <a href="http://oocode.com/">Ivan Moore</a><br /><br />The second talk by Ivan Moore after his interactive talk about Test-Drive-Development (which was a crash course on Java as well).  This time it was not as interactive but just as practical.  In addition to the slides he actually demonstrated his own continuous integration system (available from Sourceforge) <a href="http://build-o-matic.sourceforge.net/">build-o-matic</a>.  It has some interesting features like pictures to show the guilty parties when thebuild or tests break.  It also is quite a simple build system which means you can more or less build anything with it.<br /><br />He was preaching to the converted as most of the audience were practicing continuous integration anyway.  I think the main lesson to take away from the talk is to not compromise at any point on the builds or the tests even in with a heavy workload.<br /><br /><a href="http://www.bcs-spa.org/cgi-bin/view/SPA/TypeDrivenTestingInHaskell">Type Driven Development in Haskell</a> by <a href="http://research.microsoft.com/~simonpj/">Simon Peyton-Jones</a><br /><br />This talk was really about how to write more robust programs in functional programming.  The talk involved more of a discussion of functional languages and their benefits as well as how to write tests that more define the concepts and rules for inputs and the outputs.<br /><br />Mostly the testing part reminded me of the static assertions that are available in the C++ Boost Library.  I think that there must be a bridge to utilise more aspects of functional programming in a library like fashion because of the interesting optimisations that can be made.  Also mathematical correctness is a bonus.<br /><br />The lecture itself was interesting and certainly animated.  The sign of a good talk is that it makes you think, and I am certainly thinking about functional languages and their applications (after all templates can be used in that fashion but it does put a lot of strain on the compiler). I can certainly see some useful applications in the field of CAD/CAM - shame I left hat field...</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Upcoming SPA Cambridge Talk - Type-driven testing in Haskell]]></title>
    <link href="http://www.fragmentedmemory.com/blog/2008/03/04/upcoming-spa-cambridge-talk-type-driven/"/>
    <updated>2008-03-04T19:49:00+00:00</updated>
    <id>http://www.fragmentedmemory.com/blog/2008/03/04/upcoming-spa-cambridge-talk-type-driven</id>
    <content type="html"><![CDATA[<div class='post'>
Simon Peyton Jones of Microsoft Research is doing the upcoming BCS SPA talk in Cambridge.  The subject is <span style="font-weight:bold;">"Type-driven testing in Haskell"</span> so people who have an interest in functional languages should like it.  As usual the talk is free and there is a light buffet.<br /><br />Sign up through <a href="http://www.bcs-spa.org/cgi-bin/view/SPA/TypeDrivenTestingInHaskell">this link</a>.<br /><br /><blockquote>Synopsis:<br /><br />One of the joys of functional programming is that code is so much more testable. For a start, testing pure functions is much easier than testing side-effecting procedures. Better still the auto-generation of test cases can be done by a library, without any external tools. And where we want exhaustive testing, it is possible to use lazy evaluation to cut the search space dramatically. I’ll explain these idea using demos from Quickcheck and Lazy Smallcheck, two popular libraries.<br /><br />While the focus of this talk is testing, I’ll introduce functional programming as I go along, so that you don’t already have to know Haskell to make sense of the ideas. I’ll also try to give a flavour of why I think you’ll be seeing a lot more crossover of functional programming ideas into the mainstream, over the next few years. <br /><br /><span style="font-weight:bold;">Simon Peyton Jones</span><br /><br />Simon Peyton Jones, MA, MBCS, CEng, graduated from Trinity College Cambridge in 1980. After two years in industry, he spent seven years as a lecturer at University College London, and nine years as a professor at Glasgow University, before moving to Microsoft Research (Cambridge) in 1998.<br /><br />His main research interest is in functional programming languages, their implementation, and their application. He has led a succession of research projects focused around the design and implementation of production-quality functional-language systems for both uniprocessors and parallel machines. He was a key contributor to the design of the now-standard functional language Haskell, and is the lead designer of the widely-used Glasgow Haskell Compiler (GHC). He has written two textbooks about the implementation of functional languages.<br /><br />More generally, he is interested in language design, rich type systems, software component architectures, compiler technology, code generation, runtime systems, virtual machines, and garbage collection. He is particularly motivated by direct use of principled theory to practical language design and implementation -- that's one reason he loves functional programming so much.<br /><br />His home page is at <a href="http://research.microsoft.com/~simonpj">http://research.microsoft.com/~simonpj</a>.<br /></blockquote></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SPA Cambridge Talk - Windows Presentation Foundation (WPF)]]></title>
    <link href="http://www.fragmentedmemory.com/blog/2007/10/29/spa-cambridge-talk-windows-presentation/"/>
    <updated>2007-10-29T20:51:00+00:00</updated>
    <id>http://www.fragmentedmemory.com/blog/2007/10/29/spa-cambridge-talk-windows-presentation</id>
    <content type="html"><![CDATA[<div class='post'>
The latest SPA Cambridge talk is coming on the 14th November, follow the <a href="http://www.bcs-spa.org/cgi-bin/view/SPA/WindowsPresentationFoundation">link here to sign up</a>.  Here are the details:<br /><br /><span style="font-weight:bold;">Windows Presentation Foundation</span><br /><br />Ian Griffiths Interact Software Limited<br /><br /><span style="font-weight:bold;">Synopsis</span><br /><br />Windows Presentation Foundation (WPF) is a platform for building Windows desktop applications that can take full advantage of the graphical capabilities of modern PCs. Whereas many UI frameworks in the past have merely added yet another layer of abstraction on what was there before, WPF is radically different from its predecessors. This talk will discuss what possessed Microsoft to abandon the strategy of incremental tinkering that has served them well for over 20 years of Windows application development. WPF shifts away from many of the fundamental mechanisms that had been in place since the first version of Windows, and we will explore the new possibilities this creates.<br /><br /><span style="font-weight:bold;">Speaker Biography</span><br /><br />Ian Griffiths is an independent WPF consultant, developer, speaker and Pluralsight instructor and a widely recognized expert on the subject. He lives in London but can often be found on various developer mailing lists and newsgroups, where a popular sport is to see who can get him to write the longest email in reply to the shortest possible question. Ian maintains a <a href="http://www.interact-sw.co.uk/iangblog/">popular blog</a> and is co-author of "Windows Forms in a Nutshell" and of "Mastering Visual Studio .NET".</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SPA Cambridge Talk - Test Driven Development]]></title>
    <link href="http://www.fragmentedmemory.com/blog/2007/10/13/spa-cambridge-talk-test-drive/"/>
    <updated>2007-10-13T10:27:00+01:00</updated>
    <id>http://www.fragmentedmemory.com/blog/2007/10/13/spa-cambridge-talk-test-drive</id>
    <content type="html"><![CDATA[<div class='post'>
After an extended summer break the <a href="http://www.bcs-spa.org/cgi-bin/view/SPA/SpaCambridge">SPA Cambridge talks</a> are back.  A change of venue to Anglia Ruskin University has now happened which is much better due to close vicinity to many pubs which was a problem with the Microsoft Research venue.  Thee events are organised by Mark Dalgarno and you can <a href="http://blog.software-acumen.com/">read his blog here</a>.<br /><br />This month's talk was about Test Driven Development by Ivan Moore.  It was an interactive session requiring a laptop and Eclipse.  Unfortunately I discovered I must have the only copy of Eclipse in existence not set up for Java development (I have used it for Python and C/C++) a bit too late to rectify that.<br /><br />The exercise was to solve a blocks world problem with test driven development.  We used Java and JMock for this.  I also got to show my Java ineptitude since I haven't used it for 7 years properly, so I was learning on the fly.  To be honest now I go back to Java it is a lot more inelegant than I remember.  At least after all that I managed to get the tests to pass...<br /><br />The interactive sessions are a bit more fun when you are sharing a computer, especially when all three of us huddled around it have very little practical Java experience.<br /><br />The next <a href="http://www.bcs-spa.org/cgi-bin/view/SPA/SpaCambridge">talk will be from Ian Griffiths about WPF</a> (Windows Presentation Foundation) on the 14th November.</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SPA Cambridge Meeting - CMMI]]></title>
    <link href="http://www.fragmentedmemory.com/blog/2007/05/10/spa-cambridge-meeting-cmmi/"/>
    <updated>2007-05-10T20:08:00+01:00</updated>
    <id>http://www.fragmentedmemory.com/blog/2007/05/10/spa-cambridge-meeting-cmmi</id>
    <content type="html"><![CDATA[<div class='post'>
Went to another talk from the <a href="http://www.bcs-spa.org/cgi-bin/view/SPA/SpaCambridge">BCS SPA Cambridge group</a>.  There is a talk every month and they are normally well worth attending, there is certainly nothing else I have found like it elsewhere.  As usual they are hosted at <a href="http://research.microsoft.com/cambridge/">Microsoft Research, Cambridge</a> with a buffet.<br /><br />This month's talk was about <a href="http://en.wikipedia.org/wiki/CMMI">CMMI</a> hosted by  Kieran Doyle of Lamri.  I must admit I had no idea what CMMI was before going to this talk, only what it was an acronym for.  For the first half of the talk I had no idea what was going on as it covered the history of it, and did not explain what it actually was.<br /><br />Eventually we got onto the nitty gritty of this thing was.  I'd have to see what the benefits were in reality but the premise of itself is admirable, especially in a larger corporation.  Overall, I actually learnt something that is a plus, and also the at the talk we got free 512Mb USB keys - not half bad.<br /><br />Anyone interested in computing in the Cambridge area should check out these talks.</div>

]]></content>
  </entry>
  
</feed>
