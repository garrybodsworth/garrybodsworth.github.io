<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Glass | Fragmented Memory]]></title>
  <link href="http://www.fragmentedmemory.com/blog/categories/glass/atom.xml" rel="self"/>
  <link href="http://www.fragmentedmemory.com/"/>
  <updated>2013-06-18T16:40:25+01:00</updated>
  <id>http://www.fragmentedmemory.com/</id>
  <author>
    <name><![CDATA[Garry Bodsworth]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[More Vista - Desktop Window Manager]]></title>
    <link href="http://www.fragmentedmemory.com/blog/2006/10/14/more-vista-desktop-window-manager/"/>
    <updated>2006-10-14T20:46:00+01:00</updated>
    <id>http://www.fragmentedmemory.com/blog/2006/10/14/more-vista-desktop-window-manager</id>
    <content type="html"><![CDATA[<div class='post'>
I must admit, although I am not very interested in running Microsoft Windows Vista as my own operating system at home, I am interested in understanding the UI technologies that are going to be available in it.  It's certainly necessary to understand it for work.<br /><br />A more interesting application of these new UI features are how the cross-platform toolkits going to incorporate them (and indeed whether some of it is so useless that it shouldn't be incorporated).  I don't think that the toolkits will struggle to keep up since each time operating system UIs try to diverge they always end up converging.  I do think that the way these toolkits expand will show which ones are the best designed (you know, the extra functionalty being less kludgey).<br /><br />There is nother decent blog article about DWM <a href="http://blogs.msdn.com/greg_schechter/archive/2006/09/14/753605.aspx">here</a>.</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows Vista - Aero Basic UI Explanation]]></title>
    <link href="http://www.fragmentedmemory.com/blog/2006/10/13/windows-vista-aero-basic-ui-explanation/"/>
    <updated>2006-10-13T15:40:00+01:00</updated>
    <id>http://www.fragmentedmemory.com/blog/2006/10/13/windows-vista-aero-basic-ui-explanation</id>
    <content type="html"><![CDATA[<div class='post'>
There is an interesting explanation as to why the Aero Basic Interface looks the way it does when compared to the Aero accelerated theme.  You can read about it <a href="http://shellrevealed.com/blogs/shellblog/archive/2006/10/12/Frequently-asked-questions-about-the-Aero-Basic-window-frame.aspx">here</a>.<br /><br />It's quite an interesting little article since it shows Microsoft banging their heads up against the same limitations as GUI developers have been.</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[More Vista Native API]]></title>
    <link href="http://www.fragmentedmemory.com/blog/2006/10/06/more-vista-native-api/"/>
    <updated>2006-10-06T08:37:00+01:00</updated>
    <id>http://www.fragmentedmemory.com/blog/2006/10/06/more-vista-native-api</id>
    <content type="html"><![CDATA[<div class='post'>
Michael Dunn has posted anotehr Vista native API tutorial about <a href="http://www.codeproject.com/winfx/VGPowerMonitor.asp">monitoring the system's power</a>.  It is obviously not as whizz-bang as the first tutorial, but this is excellent stuff as I hope it means C/C++ developers are going to have a real go at messing around with the native API.<br /><br />There is an excellent and massive post from <a href="http://weblogs.asp.net/kennykerr/archive/2006/08/10/Windows-Vista-for-Developers-_1320_-Part-3-_1320_-The-Desktop-Window-Manager.aspx">Kenny Kerr available from this link</a>.  Make sure you check that out as well.<br /><br />I've now installed the Windows SDK (I think they call the Win32 API the Windows API now, but there is no definitive answer as Microsoft want to encourage people to use other technologies).</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows Vista and its API]]></title>
    <link href="http://www.fragmentedmemory.com/blog/2006/10/04/windows-vista-and-its-api/"/>
    <updated>2006-10-04T15:47:00+01:00</updated>
    <id>http://www.fragmentedmemory.com/blog/2006/10/04/windows-vista-and-its-api</id>
    <content type="html"><![CDATA[<div class='post'>
After lots of uncertainty with Windows Vista as a developer (it's sad, I worry about such things), I breathed a huge sigh of relief today.  Windows Vista has generated such things as WPF and Aero and other things that mean very little to me as a developer.  Simply, I want to know how to access all the good stuff.<br /><br />This had me worried as they seem to want to make non-managed code a ghetto, but this is mainly from reading allt he public information and marketing.  It seems that the Win32 is still the basis of everything, although the name Win32 is ultimately misleading.  To cut to the chase, .NET sits on top of Win32, even in Vista, and you still have access to it.<br /><br />There is a great little article on the <a href="http://www.codeproject.com/winfx/VGGlassIntro.asp">CodeProject</a> that shows that you can write in what are now called the "Native APIs".  Hit the link and have a quick read.<br /><br />I find this exciting as a developer as this means that I can write my own wrappers for stuff and extend those wrappers I have written previously.<br /><br />Now I'm in the middle of downloading the <a href="http://www.microsoft.com/downloads/details.aspx?FamilyId=117ECFD3-98AD-4D67-87D2-E95A8407FA86&displaylang=en">new Windows SDK for Vista</a> and I am going to have a closer look at the native APIs in order to work out what it can do.</div>

]]></content>
  </entry>
  
</feed>
