<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: AJAX | Fragmented Memory]]></title>
  <link href="http://www.fragmentedmemory.com/blog/categories/ajax/atom.xml" rel="self"/>
  <link href="http://www.fragmentedmemory.com/"/>
  <updated>2013-06-18T20:51:13+01:00</updated>
  <id>http://www.fragmentedmemory.com/</id>
  <author>
    <name><![CDATA[Garry Bodsworth]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[GUI Toolkits - qooxdoo]]></title>
    <link href="http://www.fragmentedmemory.com/blog/2006/10/28/gui-toolkits-qooxdoo/"/>
    <updated>2006-10-28T22:30:00+01:00</updated>
    <id>http://www.fragmentedmemory.com/blog/2006/10/28/gui-toolkits-qooxdoo</id>
    <content type="html"><![CDATA[<div class='post'>
No, I haven't lost all typing skills, it is really called qooxdoo.<br /><br /><a href="http://qooxdoo.org/">qooxdoo</a> (see also <a href="http://en.wikipedia.org/wiki/Qooxdoo">Wikipedia</a>) is an AJAX targetted Javascript user interface toolkit.  It is surprisingly fully featured and shows how far along web-based toolkits have come.  Well, when I say surprising, I mean shocking.<br /><br />The toolkit is LGPL licensed and has a large set of widgets available.  I think the best way to describe it is to send you to the demo page <a href="http://qooxdoo.org/demo">here</a> and I would recommend you look at <a href="http://demo.qooxdoo.org/html/at-a-glance/index.html">this example</a> in particular.  There is no point in looking at the screenshots as playing round with the demos demonstrates its depth of features and how polished they are.<br /><br />The advantages of this kit for web development include the abstraction away of web browser specifics and automatic browser detection.  It has things that are normally only seen in fully fledged desktop environments like drag-n-drop support.  Like I said earlier though I think the demos speak for themselves.</div>


<h2>Comments</h2>


<div class='comments'>
<div class='comment'>
<div class='author'>Garry Bodsworth</div>
<div class='content'>
No probs Si.  I found the whole thing astonishing when I found it, then I rebuilt my computer and forgot about it completely until a bit of paper just saying qooxdoo turned up by the computer today ;)<br /><br />If it was possible to make a web browser with no frame and a transparent window it would look pretty integrated with the system (not perfect for XP though at the moment).</div>
</div>
<div class='comment'>
<div class='author'>Si</div>
<div class='content'>
Nice find!!! <br /><br />This is for sure something i need to have a look at, for my blog and future plans!<br /><br />Si<br /><br />http://worldofsi.blogspot.com/</div>
</div>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[It has all gone a bit GUI]]></title>
    <link href="http://www.fragmentedmemory.com/blog/2006/10/19/it-has-all-gone-bit-gui/"/>
    <updated>2006-10-19T11:50:00+01:00</updated>
    <id>http://www.fragmentedmemory.com/blog/2006/10/19/it-has-all-gone-bit-gui</id>
    <content type="html"><![CDATA[<div class='post'>
One of the holy grails in development is a universal GUI library, much like the quest for the one equation that explains life, the universe, and everything.  Unfortunately as it currently stands such a library is further away than ever before.<br /><br />A project that wanted to succeed is the <a href="http://www.crystalclearsoftware.com/cgi-bin/boost_wiki/wiki.pl?BoostGUI">BoostGUI</a> library.  Unfortunately it has never got out of the research stage, let alone the planning stage.  It was envisioned to be the <a href="http://www.boost.org">Boost Library</a> addition to make GUI development at least have one standard.  The research page (click on the <a href="http://www.crystalclearsoftware.com/cgi-bin/boost_wiki/wiki.pl?BoostGUI">BoostGUI</a> link) though provides great avenues for people wanting to know more about GUI development, some of the conversations on mailing lists that the wiki links to are excellent and thought-provoking.<br /><br />I don't know how all of this will work in ten years time.  It was certainly an admirable aim, but with technologies like <a href="http://en.wikipedia.org/wiki/XUL">XUL</a> getting more traction and getting more mature, the answer may come from a completely different direction to what all of these toolkits are aiming to do.  They'll provide a simple cross-platform framework that will get added to over time and eventually have the richness of user interface abilities required by heavier applications.  Certainly I don't think these types of libraries can be designed from scratch to be everything, and they have to grow, whereas most GUI toolkits have gaping holes in "to be implemented" areas, whereas the simpler domains mean you can easily get 100% coverage and then add more.<br /><br />I can't believe this, over the past few weeks I have been talking myself out of heavyweight GUI toolkits...  Scary stuff.  Don't get me wrong these toolkits are still my primary interest for any GUI development, but I wonder what the future could hold as web development has really started to spped up.  We all need not only to think of this new <a href="http://www.gotw.ca/publications/concurrency-ddj.htm">multi-core future</a> but also the <a href="http://en.wikipedia.org/wiki/AJAX">web-based platform</a> future.</div>


<h2>Comments</h2>


<div class='comments'>
<div class='comment'>
<div class='author'>Garry Bodsworth</div>
<div class='content'>
Hi again,<br /><br />Okay, I have the next three artivle mapped out in my head, more VCF, Ultimate++, and OMGUI.  Then on to muti-threaded UI design I think(!)<br /><br />I don't think OMGUI has really stalled but the main developer is working on IFM version 2 ( http://ifm.sourceforge.net/ ), which is planned to have a pluggable back end which means he envisions switching over to OMGUI in the future.<br /><br />I think the biggest mistake about GUI toolkits is the territorial fighting, and arbitrary comparisons of features and code which mean nothing.  I think the only answer when looking at all of this is "Can it do the job I want it to do (and look good)?"  Some rule themselves out immediately by not having a rich enough feature set.<br /><br />I think that lots of these toolkits are reimplementing and researching everything, whereas it would be nice if there was some wiki or repository that simply documented the platform dependent APIs that people then could use for implementing whatever design they want.  After all open-source is about free-flow of information.<br /><br />Thanks,<br /><br />Garry</div>
</div>
<div class='comment'>
<div class='author'>dtinkham</div>
<div class='content'>
Yeah, I agree it is more of an issue for data than interface, but it will be interesting to see if anyone can find a way for the actual interface to take advantage of multi-core.<br /><br />Yep, I am reading your blogs. I'm waiting for YOUR honest opinion of Ultimate++. When evaluating it, please look at some of the source and see if you could actually develop with it. In particular, I'm looking to see if your preference would be VCF or U++.<br /><br />I know I have a preference, but I won't influence you by telling you which I prefer :)<br /><br />I found another GUI kit, called OMGUI. A spinoff of wx; it appears to have stalled right out of the gate.</div>
</div>
<div class='comment'>
<div class='author'>Garry Bodsworth</div>
<div class='content'>
Hi there, I wasn't sure anyone was reading this, so thanks for reading.<br /><br />It's surprising how many GUI toolkits do not take care of multi-threading architectures.  In fact none of them have it designed in and you have to implement it yourself.  Although, most GUI tookits have additional support libraries which normally encompass threading.<br /><br />I think the problem is that the multi-threading is more of an issue for the data than the interface.  What normally happens is you write your UI in a threadsafe fashion (don't use static data) and have items that need to reflect asynchronous updates via a timer mechanism.  You also need the ability to manage the resources for the user interface as well.<br /><br />In fact there is a conversation going on about multi-threading UI design in the VCF here:<br />http://vcf-online.org/forums/index.php?showtopic=897&st=0&#entry6932<br /><br />Thanks for reading,<br /><br />Garry</div>
</div>
<div class='comment'>
<div class='author'>dtinkham</div>
<div class='content'>
Interesting blogs on GUI's. <br /><br />Which, if any, GUI toolkits/frameworks are taking explicit advantage of multi-core technology, for GUI-specific tasks?</div>
</div>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AJAX - The Hot New Thang]]></title>
    <link href="http://www.fragmentedmemory.com/blog/2006/10/12/ajax-hot-new-thang/"/>
    <updated>2006-10-12T20:33:00+01:00</updated>
    <id>http://www.fragmentedmemory.com/blog/2006/10/12/ajax-hot-new-thang</id>
    <content type="html"><![CDATA[<div class='post'>
I can't be the only one.  <a href="http://en.wikipedia.org/wiki/AJAX">AJAX</a> has taken off, so I took a closer look at it and realised I have essentially been doing AJAX for years.  I referred to it as XML and Javascript to render a web page (not using XSLT).<br /><br />Maybe I've completely missed the point, but the only difference between what AJAX is now (in simplistic terms) and what I did a while back was the way the XML was being retrieved.  Admittedly my Javascript was way simpler than these new flashy whizz-bang sites, but the same data/view separation was there.  I am pretty sure it was referred to as DHTML (although I think that also encompassed <a href="http://en.wikipedia.org/wiki/VBScript">VBScript</a>).<br /><br />I must admit these Javascript platforms are really impressive, especially as the browser support gets better, like with WYSIWYG editors embedded in webpages which is what I am typing this with.  I just realised this post seemed a bit negative, but I think it's all FANTASTIC! (Fast Show fans will know what I am on about)</div>

]]></content>
  </entry>
  
</feed>
