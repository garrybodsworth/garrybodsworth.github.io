<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Graphics | Fragmented Memory]]></title>
  <link href="http://www.fragmentedmemory.com/blog/categories/graphics/atom.xml" rel="self"/>
  <link href="http://www.fragmentedmemory.com/"/>
  <updated>2013-06-18T16:40:25+01:00</updated>
  <id>http://www.fragmentedmemory.com/</id>
  <author>
    <name><![CDATA[Garry Bodsworth]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Vista Graphics Hackety Hack]]></title>
    <link href="http://www.fragmentedmemory.com/blog/2008/02/07/vista-graphics-hackety-hack/"/>
    <updated>2008-02-07T20:22:00+00:00</updated>
    <id>http://www.fragmentedmemory.com/blog/2008/02/07/vista-graphics-hackety-hack</id>
    <content type="html"><![CDATA[<div class='post'>
There is nothing more depressing than knowing you have to use a computer loaded up with Vista, especially when developing, because it is a constant battle.<br /><br />But deep in the bowels of the OS there are some interesting things, but they tend to be undocumented.  I'm not a fan of the layering of the GUI, and I always wondered if it was possible to use the base parts of the GUI DLLs which things like WP use as teir basis.<br /><br />Some exceedingly talented and clever developers have spent their brain cycles reverse engineering the completely undocumented dwm and milcore.dll (apart from the thumbnail API).  I'm not a fan of all the managed stuff especially since it mainly resoves down to the unmanaged core DLLs anyway.  Go <a href="http://siwu.info/">check out the blog here</a> with lots of videos of some exceedingly clever things.<br /><br />What is even better is that the developer has released it as <a href="http://code.google.com/p/dwmaxx/">open-source</a>.  Hopefully this will provide a basis for more adventurous and useful developments.  With this amount of flexibility available then it should be possible to create something where Vista gets some good productivity gains.</div>


<h2>Comments</h2>


<div class='comments'>
<div class='comment'>
<div class='author'>jd</div>
<div class='content'>
Have you seen the equivalent tricks in Linux with compositing window managers like compiz-fusion?<BR/><BR/>Check out this video http://remixtechnology.com/view/bfg-c2d-video-screenshot<BR/><BR/>Now all I need is a graphics card made in the last 5 years.<BR/><BR/>JD</div>
</div>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Interesting stuff - GPU general programming]]></title>
    <link href="http://www.fragmentedmemory.com/blog/2008/01/30/interesting-stuff-gpu-general/"/>
    <updated>2008-01-30T20:17:00+00:00</updated>
    <id>http://www.fragmentedmemory.com/blog/2008/01/30/interesting-stuff-gpu-general</id>
    <content type="html"><![CDATA[<div class='post'>
An interesting library I stumbled across on the Internet the other day enables the user to accelerate general code by using your graphics hardware.  An open-source library <a href="http://libsh.org/">libsh</a> provides a high level metaprogramming language in C++ for programming GPUs.<br /><br />Unfortunately, libsh is no longer actively developed because the developers behind it have created a commercial business around it (those lucky guys have found a way to make programming pay!)<br /><br />It would be nice to utilise the processing power of the GPU, essentially treating the hardware like another (more specialised) processing core.  After all graphics cards have more transistors than the average CPU...  I think I mentioned something like this in my <a href="http://garrys-brain.blogspot.com/2006/12/multiple-core-madness.html">multithreading post</a> many a moon ago.  But I suppose also it ties into virtualisation of the procesing hardware available on the computer which I even <a href="http://garrys-brain.blogspot.com/2007/10/virtualisation-understanding.html">posted about before</a>.<br /><br />A great website for this type of stuff is <a href="http://www.gpgpu.org/">General-Purpose Computation Using Graphics Hardware</a> which does exactly what it says on the tin.  There are active forums and tons of news and information.<br /><br />Surprisingly there is not a huge amount of general purpose stuff out there freely available but as GPUs become more powerful and more programmable I am sure that will change.  Personally I think the future would be to use a core of these multi-core processors to do the graphics, even if it is slightly specialised for stream processing or something.  That would certainly negate the need for faster graphics buses as it would run on the processor (although other buses would still need to progress).  But yet again I have digressed....</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Good resource for icons, buttons, and so on...]]></title>
    <link href="http://www.fragmentedmemory.com/blog/2007/05/29/good-resource-for-icons-buttons-and-so/"/>
    <updated>2007-05-29T20:40:00+01:00</updated>
    <id>http://www.fragmentedmemory.com/blog/2007/05/29/good-resource-for-icons-buttons-and-so</id>
    <content type="html"><![CDATA[<div class='post'>
<a href="http://www.smashingmagazine.com/">Smashing Magazine</a> has a great article <a href="http://www.smashingmagazine.com/2007/05/24/freebies-round-up-icons-buttons-and-templates/">Freebies Round-Up: Icons, Buttons and Templates</a> detailing lots of sources of icons and images available for use.  Not all can be used in commercial programs but they could be used for open-source programs.</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OpenGL In Python]]></title>
    <link href="http://www.fragmentedmemory.com/blog/2007/01/23/opengl-in-python/"/>
    <updated>2007-01-23T20:20:00+00:00</updated>
    <id>http://www.fragmentedmemory.com/blog/2007/01/23/opengl-in-python</id>
    <content type="html"><![CDATA[<div class='post'>
<a href="http://pyopengl.sourceforge.net/">pyOpenGL</a> provides access to OpenGL in Python.<br /><br />PyOpenGL includes support for OpenGL v1.1, GLU, GLUT v3.7, GLE 3, WGL 4, and Togl (Tk OpenGL widget) 1.6.  It also includes support for dozens of extensions (where supported in the underlying implementation).<br /><br />Related (and unrelated) 3D libraries are also listed <a href="http://www.vrplumber.com/py3d.py">here</a>.  It includes Python bindings in OpenSceneGraph, Irrlicht, OGRE, and more.</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[For the creative types - Ubuntu Studio announced]]></title>
    <link href="http://www.fragmentedmemory.com/blog/2007/01/21/for-creative-types-ubuntu-studio/"/>
    <updated>2007-01-21T22:28:00+00:00</updated>
    <id>http://www.fragmentedmemory.com/blog/2007/01/21/for-creative-types-ubuntu-studio</id>
    <content type="html"><![CDATA[<div class='post'>
An interesting development from <a href="http://www.ubuntu.com">Ubuntu</a> is that this April they are plaaning to release something called <a href="http://www.ubuntustudio.org">Ubuntu Studio</a>.<br /><br />It is a multimedia creation derivative of Ubuntu.  It "is aimed at the linux audio, video and graphic enthusiast as well as professional".  Sounds interesting, lowering the bar for peopel creating content in Linux, but also raising the capabilities at the same time, hopefully giving much needed exposure to some of the related projects.<br /><br />The new derivative has a <a href="https://wiki.ubuntu.com/UbuntuStudio">wiki</a> where information and planning has started.  I like the graphical design and new logo, but that is just shallow.  Packages planned to be in the distribution can be seen <a href="https://wiki.ubuntu.com/UbuntuStudio/ToPackage">here</a>.</div>

]]></content>
  </entry>
  
</feed>
