<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Javascript | Fragmented Memory]]></title>
  <link href="http://www.fragmentedmemory.com/blog/categories/javascript/atom.xml" rel="self"/>
  <link href="http://www.fragmentedmemory.com/"/>
  <updated>2013-06-20T21:46:17+01:00</updated>
  <id>http://www.fragmentedmemory.com/</id>
  <author>
    <name><![CDATA[Garry Bodsworth]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[GUI Toolkits - XULRunner platform]]></title>
    <link href="http://www.fragmentedmemory.com/blog/2006/11/15/gui-toolkits-xulrunner-platform/"/>
    <updated>2006-11-15T15:05:00+00:00</updated>
    <id>http://www.fragmentedmemory.com/blog/2006/11/15/gui-toolkits-xulrunner-platform</id>
    <content type="html"><![CDATA[<div class='post'>
You can't have escaped this platform, you might not have heard about it, but it provides the basis for <a href="http://www.getfirefox.com">Firefox</a>, <a href="http://www.mozilla.com/en-US/thunderbird/">Thunderbird</a>, <a href="http://www.getdemocracy.com/">Democracy Player</a>, and <a href="http://www.songbirdnest.com/">SongBird</a> (which I mentioned <a href="http://garrys-brain.blogspot.com/2006/10/digital-music-songbird.html">before</a> and it's continuing apace).  A good place to start is the <a href="http://en.wikipedia.org/wiki/XULRunner">Wikipedia article on XULRunner</a>, it provides the links you need to get started.<br /><br />XULRunner is not simply a user interface but probably could be described as a platform like Microsoft's <a href="http://en.wikipedia.org/wiki/Extensible_Application_Markup_Language">XAML/.NET</a> or like <a href="http://www.java.net/">Java's virtual machine</a> (very loosely) or <a href="http://dev.aol.com/boxely/">Boxely from AOL</a>.  Essentially it provides a layer of abstraction from the underlying architecture in order to allow the developer to work on the actual coding.  XULRunner is the framework to allow standalone applications to be developed using the XUL language used for Firefox extensions.<br /><br />Currently <a href="http://developer.mozilla.org/en/docs/XULRunner">XULRunner</a> is in beta with version 1.8, but with version 1.9 next year they recommend that for production releases.  Along with the 1.9 release the Gecko rendering engine is also getting updated with some additional nice vector rendering.<br /><br />The framework provides a myriad of features.  There is built-in spell-checking, networking, the aforementioned Gecko engine, web services, storage/SQLie interfaces, UI, the ability to embed in another application, and also the Python bindings (full version forthcoming).  I think the reason that I find this quite interesting is the two applications I have used most at home and work in the past couple of years have been based on this.  I just wonder how far it can all be pushed for heavyweight desktop application development.<br /><br />You can view a list of applications based on XULRunner <a href="http://developer.mozilla.org/en/docs/XULRunner_Hall_of_Fame">here</a>.  When the final proper release of 1.9 is out I imagine there will be more people willing to use it as it won't be all belt and braces, there can be solid tutorials and the suchlike.<br /><br />With so many of these types of projects around at the moment, I am wondering when the "survival of the fittest" will start to kick in.  Admittedly, XULRunner has a very strong chance since it is a platform for Thunderbird and Firefox.</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Java - A Gift To Free Software]]></title>
    <link href="http://www.fragmentedmemory.com/blog/2006/11/13/java-gift-to-free-software/"/>
    <updated>2006-11-13T19:03:00+00:00</updated>
    <id>http://www.fragmentedmemory.com/blog/2006/11/13/java-gift-to-free-software</id>
    <content type="html"><![CDATA[<div class='post'>
After a few weeks/months of build up the <a href="http://www.desktoplinux.com/news/NS3337915997.html">the press are now reporting on Sun open-sourcing Java under the GPL license</a>.  This is free as in freedom.  This is great news, especially in the <a href="http://www.betanews.com/article/Microsoft_to_Pay_Novell_348_Million/1162966311">current climate brought about by Microsoft in recent weeks</a> (with the <a href="http://news.samba.org/announcements/team_to_novell/">Samba team now pubic in their opposition to the deal</a>).  Overall, this is great news and I imagine this could push Java from strength to strength.  Pair this up with the <a href="http://www.kaourantin.net/2006/11/spidermonkeys-relative-tamarin-joins.html">Adobe's EMCAScript donation to the Mozilla Foundation</a>, I think this could be a very exciting time for the Java family of products.<br /><br />This has also got me thinking about Java user interfaces.  The last time I looked at them many years ago they were more of a Motif style of user-interface, certainly not the native look'n'feel.  I wondered how far they have got now.  I am a user of <a href="http://azureus.sourceforge.net/">Azureus</a> the fantastic BitTorrent client written in Java, the interface is not quite native, but has been getting closer and closer in each subsequent version.  Apparently it is also possible to build Azureus with the <a href="http://www.gnu.org/software/classpath/">GNU Classpath library</a> supplied with the <a href="http://gcc.gnu.org/">GCC</a>.<br /><br />There is some documentation about Swing look'n'feel available <a href="http://www-128.ibm.com/developerworks/java/library/j-mer05273/">here</a> about some default theming.  There is also a look'n'feel Java website <a href="http://javootoo.l2fprod.com/">here</a>.  There certainly seems to be a lot out there that runs pretty close to being native looking, but it seems to fall short in some places, I think this warrants some more investigation...</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GUI Toolkits - qooxdoo]]></title>
    <link href="http://www.fragmentedmemory.com/blog/2006/10/28/gui-toolkits-qooxdoo/"/>
    <updated>2006-10-28T22:30:00+01:00</updated>
    <id>http://www.fragmentedmemory.com/blog/2006/10/28/gui-toolkits-qooxdoo</id>
    <content type="html"><![CDATA[<div class='post'>
No, I haven't lost all typing skills, it is really called qooxdoo.<br /><br /><a href="http://qooxdoo.org/">qooxdoo</a> (see also <a href="http://en.wikipedia.org/wiki/Qooxdoo">Wikipedia</a>) is an AJAX targetted Javascript user interface toolkit.  It is surprisingly fully featured and shows how far along web-based toolkits have come.  Well, when I say surprising, I mean shocking.<br /><br />The toolkit is LGPL licensed and has a large set of widgets available.  I think the best way to describe it is to send you to the demo page <a href="http://qooxdoo.org/demo">here</a> and I would recommend you look at <a href="http://demo.qooxdoo.org/html/at-a-glance/index.html">this example</a> in particular.  There is no point in looking at the screenshots as playing round with the demos demonstrates its depth of features and how polished they are.<br /><br />The advantages of this kit for web development include the abstraction away of web browser specifics and automatic browser detection.  It has things that are normally only seen in fully fledged desktop environments like drag-n-drop support.  Like I said earlier though I think the demos speak for themselves.</div>


<h2>Comments</h2>


<div class='comments'>
<div class='comment'>
<div class='author'>Garry Bodsworth</div>
<div class='content'>
No probs Si.  I found the whole thing astonishing when I found it, then I rebuilt my computer and forgot about it completely until a bit of paper just saying qooxdoo turned up by the computer today ;)<br /><br />If it was possible to make a web browser with no frame and a transparent window it would look pretty integrated with the system (not perfect for XP though at the moment).</div>
</div>
<div class='comment'>
<div class='author'>Si</div>
<div class='content'>
Nice find!!! <br /><br />This is for sure something i need to have a look at, for my blog and future plans!<br /><br />Si<br /><br />http://worldofsi.blogspot.com/</div>
</div>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AJAX - The Hot New Thang]]></title>
    <link href="http://www.fragmentedmemory.com/blog/2006/10/12/ajax-hot-new-thang/"/>
    <updated>2006-10-12T20:33:00+01:00</updated>
    <id>http://www.fragmentedmemory.com/blog/2006/10/12/ajax-hot-new-thang</id>
    <content type="html"><![CDATA[<div class='post'>
I can't be the only one.  <a href="http://en.wikipedia.org/wiki/AJAX">AJAX</a> has taken off, so I took a closer look at it and realised I have essentially been doing AJAX for years.  I referred to it as XML and Javascript to render a web page (not using XSLT).<br /><br />Maybe I've completely missed the point, but the only difference between what AJAX is now (in simplistic terms) and what I did a while back was the way the XML was being retrieved.  Admittedly my Javascript was way simpler than these new flashy whizz-bang sites, but the same data/view separation was there.  I am pretty sure it was referred to as DHTML (although I think that also encompassed <a href="http://en.wikipedia.org/wiki/VBScript">VBScript</a>).<br /><br />I must admit these Javascript platforms are really impressive, especially as the browser support gets better, like with WYSIWYG editors embedded in webpages which is what I am typing this with.  I just realised this post seemed a bit negative, but I think it's all FANTASTIC! (Fast Show fans will know what I am on about)</div>

]]></content>
  </entry>
  
</feed>
